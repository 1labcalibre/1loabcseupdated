rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin (L1 or L2)
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'L1' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'L2');
    }
    
    // Helper function to check if user has machine access
    function hasMachineAccess() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.machineAccess != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.machineAccess.size() > 0;
    }
    
    // Users collection - Allow reading all users for admin functionality
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        (request.auth.uid == userId || 
         exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'L1');
      allow delete: if isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'L1' &&
        request.auth.uid != userId; // Cannot delete own account
    }
    
    // Products collection
    match /products/{productId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Test data collection
    match /testData/{testId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAdmin();
    }
    
    // Test parameters collection
    match /testParameters/{parameterId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Saved reports collection
    match /savedReports/{reportId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Certificates collection
    match /certificates/{certificateId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Certificate templates collection
    match /certificateTemplates/{templateId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow write: if isAuthenticated();
    }
    
    // Audit trail collection
    match /auditTrail/{auditId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if false; // Audit entries should never be updated
      allow delete: if false; // Audit entries should never be deleted
    }
  }
}